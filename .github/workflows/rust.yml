name: Rust

on:
  push:
    branches: [ "2.0" ]
  pull_request:
    branches: [ "2.0" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install Rust nightly
      run: rustup override set nightly

    - name: Install required components
      run: rustup component add rustfmt clippy

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-registry-

    - name: Cache cargo build
      uses: actions/cache@v2
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-build-

    - name: Print environment variables
      run: printenv

    - name: Print current directory
      run: pwd

    - name: List current directory contents
      run: ls -la

    - name: Build
      env:
        CARGO_MANIFEST_DIR: ${{ github.workspace }}
      run: cargo build --verbose

    - name: Run tests
      env:
        CARGO_MANIFEST_DIR: ${{ github.workspace }}
      run: cargo test --verbose
